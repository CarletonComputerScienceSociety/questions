---
import { getCollection } from "astro:content";
import Back from "@components/Back/Back.astro";
import Evaluation from "@components/Evaluation/Evaluation.astro";
import { default as Layout } from "src/layouts/Content/Content.astro";
import MathJax from "@components/MathJax.svelte";

export async function getStaticPaths() {
  const tags = await getCollection("tags");
  const paths = tags.map((tag) => ({ params: { tag: tag.data.tag } }));
  return paths;
}

const { tag } = Astro.params;

const taggedQuestions = await getCollection("questions", (page) => {
  if (!page || !page.data || !page.data.tags) return false;
  return page.data.tags.includes(tag);
});

const randomQuestion =
  taggedQuestions[Math.floor(Math.random() * taggedQuestions.length)];

// TODO we should not be generated the title of the path
function formatString(input: string) {
  let [_course, mainPart, numberPart] = input.split("/");

  mainPart = mainPart
    .split("-")
    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
    .join(" ");

  return `${mainPart} - ${numberPart}`;
}

const title = formatString(randomQuestion.data.path);
const tags = await getCollection("tags");
const tagResource = tags.find((t) => t.data.tag === tag);
---

<Layout title={`Practice By Tag: ${tag}`}>
  <div class="Question__bar">
    <div>
      <Back />
    </div>
  </div>

  <h1>
    Practice By Tag: <span class="Question__title__span"
      >{tagResource?.data.title}</span
    >
  </h1>
  <div style="margin-bottom:1.9rem"></div>
  <i>Question: {title}</i>
  <div style="margin-bottom:2rem"></div>
  <Evaluation
    questions={[randomQuestion.data.path]}
    generate={true}
    includeLinks={true}
  />

  <MathJax client:load />
</Layout>
