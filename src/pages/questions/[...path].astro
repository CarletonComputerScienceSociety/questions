---
import MathJax from "@components/MathJax.svelte";
import Back from "@components/Back/Back.astro";
import Button from "@components/Button/Button.astro";
import Tag from "@components/Tag/Tag.astro";
import MultipleChoiceQuestion from "@components/MultipleChoiceQuestion/MultipleChoiceQuestion.astro";
import { getCollection } from "astro:content";
import { default as Layout } from "src/layouts/Content/Content.astro";
import { dynamicImport } from "@utilities/index";

export async function getStaticPaths() {
  const questions = await getCollection("questions");
  return questions
    .filter((question: any) => question.id.includes("index.md"))
    .map((page) => {
      return {
        params: { path: page.slug },
        props: { page },
      };
    });
}

const { path } = Astro.params;
const { page } = Astro.props;
const { Content } = await page.render();

// TODO we should not be generated the title of the path
function formatString(input: string) {
  let [_course, mainPart, numberPart] = input.split("/");

  mainPart = mainPart
    .split("-")
    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
    .join(" ");

  return `${mainPart} - ${numberPart}`;
}

const loadQuestion = async () => {
  // HACK: everything is multiple choice right now so this is ok...
  if (page.data.type === "multiple-choice") {
    const data = await dynamicImport(
      `../../content/questions/${page.data.path}/question.ts`,
      import.meta.url,
    );
    return data.question;
  }
};

const question = await loadQuestion();
const title = formatString(path);

const tags = await getCollection("tags");
const tagMap: { [key: string]: string } = tags.reduce(
  (map, tag) => {
    map[tag.data.tag] =
      tag.data.title + (tag.data.section ? " (" + tag.data.section + ")" : "");
    return map;
  },
  {} as { [key: string]: string },
);
---

<Layout title={title + " Question"}>
  <div class="Question__bar">
    <div><Back /></div>
  </div>

  <h1>
    Question: <span class="Question__title__span">{title}</span>
  </h1>
  <div class="Question__author">
    <i>Author: {page.data.author}</i>
    <div>
      <a href={`/questions/solution/${path}`}
        ><Button
          icon="mdi mdi-check-bold"
          disabled={page.data.solution ? false : true}
        /></a
      >
      <a href={`/questions/generator/${path}`}
        ><Button
          icon="mdi mdi-creation"
          disabled={page.data.generator ? false : true}
        /></a
      >
      <a
        class="Question__contribute"
        href={`https://github.com/CarletonComputerScienceSociety/questions/blob/main/src/content/questions/${path}/index.md`}
        ><Button icon="mdi mdi-github" /></a
      >
    </div>
  </div>
  <Content />
  <MultipleChoiceQuestion
    question={question}
    interactive={false}
    displaySolution={false}
  />
  <div class="Question__tags">
    {page.data.tags.map((tag: string) => <Tag id={tag} label={tagMap[tag]} />)}
  </div>
  <MathJax client:load />
</Layout>
