---
import Back from "@components/Back/Back.astro";
import Button from "@components/Button/Button.astro";
import MultipleChoiceQuestion from "@components/MultipleChoiceQuestion/MultipleChoiceQuestion.astro";
import MathJax from "@components/MathJax.svelte";
import { dynamicImport } from "@utilities/index";
import { getCollection } from "astro:content";
import { default as Layout } from "src/layouts/Content/Content.astro";

export async function getStaticPaths() {
  const questions = await getCollection("questions");
  return questions
    .filter((question: any) => question.id.includes("index.md"))
    .map((page) => {
      return {
        params: { path: page.slug },
        props: { page },
      };
    });
}

const { path } = Astro.params;
const { page } = Astro.props;
const { Content } = await page.render();
const solutionFile = await dynamicImport(
  `../../../content/questions/${page.data.solution}`,
  import.meta.url,
);
const SolutionComponent = solutionFile.default;

const loadQuestion = async () => {
  // HACK: everything is multiple choice right now so this is ok...
  if (page.data.type === "multiple-choice") {
    const data = await dynamicImport(
      `../../../content/questions/${page.data.path}/question.ts`,
      import.meta.url,
    );
    return data.question;
  }
};

const question = await loadQuestion();

// TODO: should not be generating the title of the path
function formatString(input: string) {
  let [_course, mainPart, numberPart] = input.split("/");

  mainPart = mainPart
    .split("-")
    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
    .join(" ");

  return `${mainPart} - ${numberPart}`;
}

const title = formatString(path);
---

<Layout title="Solution">
  <div class="Question__bar">
    <div><Back /></div>
  </div>
  <Content />
  <div>
    <h1>
      Solution: <span class="Question__title__span">{title}</span>
    </h1>
    <i>Author: {page.data.author}</i>
    <br />
    <br />
    <h2>Question</h2>
    <MultipleChoiceQuestion
      question={question}
      interactive={false}
      displaySolution={true}
    />
  </div>
  <div style="margin-top:2.5rem"></div>
  <h2>Solution</h2>
  <div class="Solution">
    <SolutionComponent />
  </div>
  <br />
  <a
    style="margin-left: -0.4rem"
    href={`https://github.com/CarletonComputerScienceSociety/questions/blob/main/src/content/questions/${page.data.solution}`}
    ><Button label="Contribute" /></a
  >
  <MathJax client:load />
</Layout>

<style>
  .Solution {
    img {
      max-width: 20rem;
    }
  }

  @media (max-width: 768px) {
    .Solution {
      img {
        max-width: 100%;
      }
    }
  }
</style>
